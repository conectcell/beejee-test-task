{"version":3,"sources":["utlis/compose.js","utlis/input-validators.js","utlis/dictionaries.js","utlis/helpers.js","services/beejee-service.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/service-context/service-context.js","redux/action-types.js","redux/reducers/common-reducer.js","redux/reducers/auth-reducer.js","redux/reducers/form-errors-reducer.js","redux/reducers/tasks-reducer.js","redux/reducers/index.js","redux/actions/common-actions.js","redux/sagas/actors/helper-saga.js","redux/actions/auth-actions.js","utlis/form-errors.js","redux/actions/form-errors-actions.js","redux/sagas/actors/auth-saga.js","redux/actions/tasks-actions.js","redux/sagas/actors/tasks-saga.js","redux/action-types-saga.js","redux/sagas/listeners/saga-helper-listener.js","redux/sagas/listeners/saga-auth-listener.js","redux/sagas/listeners/saga-tasks-listener.js","redux/saga.js","redux/store.js","components/handlers/alerts-handler/alerts-handler.js","components/handlers/auth-handler/index.js","components/handlers/auth-handler/auth-handler.js","redux/actions/saga-actions.js","components/navigation/navigation.js","components/handlers/redirect-handler/index.js","components/handlers/redirect-handler/redirect-handler.js","components/layout/layout.js","components/forms/inputs/regular-input/index.js","components/forms/inputs/regular-input/regular-input.js","assets/spinner.svg","components/spinner/index.js","components/spinner/spinner.js","components/forms/form/index.js","components/forms/form/form.js","components/hoc-helpers/with-service.js","pages/add-task-page/add-task-page.js","pages/login-page/login-page.js","pages/logout-page/logout-page.js","components/handlers/loading-handler/loading-handler.js","components/tasks/pagination/index.js","components/tasks/pagination/pagination.js","components/tasks/tasks-sorter/tasks-sorter.js","components/tasks/tasks-sorter/index.js","components/tasks/task-row/task-row.js","components/tasks/task-row/index.js","components/tasks/tasks-table/taks-table.js","pages/tasks-list-page/tasks-list-page.js","components/app-router/index.js","components/app-router/app-router.js","components/app/app.js","components/app/index.js","reportWebVitals.js","index.js"],"names":["compose","funcs","comp","reduceRight","wrapped","f","validators","validateEmail","text","email","test","length","toLowerCase","validateRequiredField","dictionaries","statuses","sortTypes","0","name","sort_field","sort_direction","1","3","4","5","6","7","8","helpers","objectToUrl","obj","Object","keys","map","key","join","BeejeeService","_apiBase","clearToken","localStorage","removeItem","setToken","token","setItem","getToken","getItem","makeRequest","url","a","post","body","addDeveloper","toSend","method","fetch","res","ok","Error","status","json","getTasksList","params","developer","editTask","id","addTask","login","ErrorIndicator","className","ErrorBoundry","state","hasError","this","setState","props","children","Component","React","createContext","ServiceProvider","Provider","ServiceConsumer","Consumer","SHOW_SUCCESS","HIDE_SUCCESS","SHOW_ERROR","HIDE_ERROR","SHOW_LOADER","HIDE_LOADER","SHOW_FORM_LOADER","HIDE_FORM_LOADER","LOGIN","LOGOUT","REDIRECT","SET_LOGIN_FORM_ERRORS","SET_ADD_TASK_FORM_ERRORS","SET_EDIT_TASK_FORM_ERRORS","UPDATE_TASKS","SET_TAKS_SEARCH_PARAMS","SET_TASKS_LIST","SET_TASKS_COUNT","initialState","globalError","globalSuccess","loading","formLoading","redirect","commonReducer","action","type","data","loggedIn","authReducer","loginFormErrors","addTaskFormErrors","editTaskFormErrors","formErrorsReducer","updateTasks","tasksSearchParams","page","tasksList","totalTasks","tasksReducer","combineReducers","common","auth","formErrors","tasks","commonShowLoader","commonHideLoader","commonShowFormLoader","commonHideFormLoader","commonShowError","commonShowSuccess","commonRedirect","HelperSaga","service","put","authLogin","authLogout","errors","inputs","leftErrors","addTasksFromErrors","editTasksFromErrors","setLoginFormErrors","setAddTaskFormErrors","setEditTaskFormErrors","AuthSaga","call","message","delay","setTasksList","setTasksCount","TasksSaga","total","total_task_count","parseInt","SAGA_LOGIN","SAGA_LOGOUT","SAGA_ADD_TASK","SAGA_EDIT_TASK","SAGA_GET_TASKS","thisSaga","saga","takeEvery","errorMessageSaga","successMessageSaga","loginSaga","logoutSaga","addTaskSaga","editTaskSaga","tasksListSaga","rootSaga","es6promise","polyfill","helperSagas","HelperListener","authSagas","AuthListener","tasksSagas","TasksListener","all","console","log","sagaMiddleware","createSagaMiddleware","middleware","thunk","store","createStore","rootReducer","applyMiddleware","sagaTask","run","connect","success","error","commonHideSuccess","commonHideError","useEffect","setTimeout","k","AuthHandler","useState","sagaLogout","aria-label","to","aria-current","onClick","RedirectHandler","location","useLocation","history","useHistory","pathname","push","Layout","RegularInput","label","placeholder","value","errorText","validator","changeInputValue","options","changeInput","val","validated","validate","inputValidators","htmlFor","aria-describedby","onChange","e","target","defaultValue","Spinner","src","spinner","alt","Form","header","buttonText","newState","errorMessages","renderInputs","input","validatedFields","validatedCount","filter","i","onSubmit","event","preventDefault","disabled","withService","Wrapped","username","sagaAddTask","form","FormData","append","password","sagaLogin","Pagination","perPage","changePage","pages","setPages","minPage","Math","max","maxPage","min","ceil","pagesArray","cp","TasksSorter","TaskRow","sagaEditTask","number","setLoading","showEdit","setShowEdit","updateTask","horizontal","searchParams","scope","task","nm","update","sagaGetTasksList","setPage","sort","setSort","getData","p","s","pararms","AppRouter","path","component","TasksListPage","exact","LoginPage","LogoutPage","AddTaskPage","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1af8185.chunk.js","sourcesContent":["const compose = (...funcs) => (comp) =>\n  funcs.reduceRight((wrapped, f) => f(wrapped), comp);\n\nexport default compose;\n","const validators = {\n    validateEmail(text)\n    {\n        const validateEmail = (email) =>\n        {\n            const re = /\\S+@\\S+\\.\\S+/;\n            return re.test(email);\n        }\n        return text.length === 0 ? false : validateEmail(text.toLowerCase());\n    },\n    validateRequiredField(text)\n    {\n        return text.length >= 3;\n    },\n};\n\nexport default validators;\n","const dictionaries = {\n    statuses: {\n        '0': \"задача не выполнена\",\n        '1': \"задача не выполнена, отредактирована админом\",\n        '10': \"задача выполнена\",\n        '11': \"задача отредактирована админом и выполнена\"\n    },\n    sortTypes: {\n        0: {\n            name: \"Время добавления по возрастанию\",\n            sort_field: 'id',\n            sort_direction: 'asc'\n        },\n        1: {\n            name: \"Время добавления по убыванию\",\n            sort_field: 'id',\n            sort_direction: 'desc'\n        },\n        3: {\n            name: \"Имя пользователя по возрастанию\",\n            sort_field: 'username',\n            sort_direction: 'asc'\n        },\n        4: {\n            name: \"Имя пользователя по убыванию\",\n            sort_field: 'username',\n            sort_direction: 'desc'\n        },\n        5: {\n            name: \"Почта пользователя по возрастанию\",\n            sort_field: 'email',\n            sort_direction: 'asc'\n        },\n        6: {\n            name: \"Почта пользователя по убыванию\",\n            sort_field: 'email',\n            sort_direction: 'desc'\n        },\n        7: {\n            name: \"Статус по возрастанию\",\n            sort_field: 'status',\n            sort_direction: 'asc'\n        },\n        8: {\n            name: \"Статус по убыванию\",\n            sort_field: 'status',\n            sort_direction: 'desc'\n        }\n    }\n};\nexport default dictionaries;\n","const helpers = {\n    objectToUrl: (obj)=> {\n        return Object.keys(obj).map((key) => {\n            return key + '=' + obj[key];\n        }).join('&');\n    }\n};\nexport default helpers;\n","import {helpers} from '../utlis';\n\nexport default class BeejeeService\n{\n    _apiBase = 'https://uxcandy.com/~shapoval/test-task-backend/v2/';\n\n    clearToken = () => localStorage.removeItem('token');\n\n    setToken = (token) => localStorage.setItem('token', token);\n\n    getToken = () => localStorage.getItem('token');\n\n\n    makeRequest = async (url, post = false, body = null, addDeveloper = true) => {\n        const toSend = {};\n\n        if(post)\n        {\n            toSend.method = 'POST';\n            toSend.body = body;\n        }\n\n        const res = await fetch(`${this._apiBase}${url}${addDeveloper ? '?developer=ykemer' : ''}`, toSend);\n\n        if (!res.ok) throw new Error(`Could not fetch ${url}, received ${res.status}`);\n\n        return await res.json();\n    };\n\n\n\n    getTasksList = async (params = {}) => {\n        params.developer = 'ykemer';\n        return await this.makeRequest(`?${helpers.objectToUrl(params)}`, false, null, false);\n    }\n\n    editTask = async (id, params) => await this.makeRequest(`edit/${id}`, true, params);\n\n    addTask = async (params) =>  await this.makeRequest('create', true, params);\n\n    login = async (params) => await this.makeRequest('login', true, params);\n}\n","import React from 'react';\n\nimport './error-indicator.css';\n\nconst ErrorIndicator = () =>\n{\n    return (\n        <div className=\"error-indicator\">\n            <h1>Houston, у нас проблемы</h1>\n        </div>\n    );\n};\n\nexport default ErrorIndicator;\n","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;\n","import React, {Component} from 'react';\n\nimport ErrorIndicator from '../error-indicator/error-indicator';\n\nexport default class ErrorBoundry extends Component\n{\n\n    state = {\n        hasError: false\n    };\n\n    componentDidCatch()\n    {\n        this.setState({\n            hasError: true\n        });\n    }\n\n    render()\n    {\n\n        if (this.state.hasError)\n        {\n            return <ErrorIndicator/>\n        }\n\n        return this.props.children;\n    }\n}\n","import React from 'react';\n\nconst {\n    Provider: ServiceProvider,\n    Consumer: ServiceConsumer\n} = React.createContext();\n\nexport {\n    ServiceProvider,\n    ServiceConsumer\n};\n","export const SHOW_SUCCESS = 'SHOW_SUCCESS';\nexport const HIDE_SUCCESS = 'HIDE_SUCCESS';\n\nexport const SHOW_ERROR = 'SHOW_ERROR';\nexport const HIDE_ERROR = 'HIDE_ERROR';\nexport const SHOW_LOADER = 'SHOW_LOADER';\nexport const HIDE_LOADER = 'HIDE_LOADER';\nexport const SHOW_FORM_LOADER = 'SHOW_FORM_LOADER';\nexport const HIDE_FORM_LOADER = 'HIDE_FORM_LOADER';\n\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const REDIRECT = 'REDIRECT';\n\n\n\nexport const SET_LOGIN_FORM_ERRORS = 'SET_LOGIN_FORM_ERRORS';\nexport const SET_ADD_TASK_FORM_ERRORS = 'SET_ADD_TASK_FORM_ERRORS';\nexport const SET_EDIT_TASK_FORM_ERRORS = 'SET_EDIT_TASK_FORM_ERRORS';\n\nexport const UPDATE_TASKS = 'UPDATE_TASKS';\nexport const SET_TAKS_SEARCH_PARAMS = 'SET_TAKS_SEARCH_PARAMS';\nexport const SET_TASKS_LIST = 'SET_TASKS_LIST';\nexport const SET_TASKS_COUNT = 'SET_TASKS_COUNT';\n","import {\n    HIDE_ERROR,\n    HIDE_FORM_LOADER,\n    HIDE_LOADER,\n    HIDE_SUCCESS,\n    REDIRECT,\n    SHOW_ERROR,\n    SHOW_FORM_LOADER,\n    SHOW_LOADER,\n    SHOW_SUCCESS\n} from '../action-types';\n\nconst initialState = {\n    globalError: null,\n    globalSuccess: null,\n    loading: false,\n    formLoading: false,\n    redirect: null,\n};\n\nconst commonReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SHOW_ERROR:\n            return {\n                ...state,\n                globalError: action.data,\n            };\n        case HIDE_ERROR:\n            return {\n                ...state,\n                globalError: null,\n            };\n        case SHOW_SUCCESS:\n            return {\n                ...state,\n                globalSuccess: action.data,\n            };\n        case HIDE_SUCCESS:\n            return {\n                ...state,\n                globalSuccess: null,\n            };\n        case SHOW_LOADER:\n            return {\n                ...state,\n                loading: true,\n            };\n        case HIDE_LOADER:\n            return {\n                ...state,\n                loading: false,\n            };\n        case SHOW_FORM_LOADER:\n            return {\n                ...state,\n                formLoading: true,\n            };\n        case HIDE_FORM_LOADER:\n            return {\n                ...state,\n                formLoading: false,\n            };\n        case REDIRECT:\n            return {\n                ...state,\n                redirect: action.data,\n            };\n        default:\n            return state;\n    }\n\n\n};\n\nexport default commonReducer;\n","import {LOGIN, LOGOUT} from '../action-types';\n\nconst initialState = {\n    loggedIn: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOGIN:\n            return {\n                ...state,\n                loggedIn: true,\n            };\n        case LOGOUT:\n            return {\n                ...state,\n                loggedIn: false,\n            };\n        default:\n            return state;\n    }\n\n\n};\n\nexport default authReducer;\n","import {SET_ADD_TASK_FORM_ERRORS, SET_EDIT_TASK_FORM_ERRORS, SET_LOGIN_FORM_ERRORS} from '../action-types';\n\nconst initialState = {\n    loginFormErrors: {},\n    addTaskFormErrors: {},\n    editTaskFormErrors: {},\n};\n\nconst formErrorsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ADD_TASK_FORM_ERRORS:\n            return {\n                ...state,\n                addTaskFormErrors: action.data,\n            };\n        case SET_LOGIN_FORM_ERRORS:\n            return {\n                ...state,\n                loginFormErrors: action.data,\n            };\n        case SET_EDIT_TASK_FORM_ERRORS:\n            return {\n                ...state,\n                editTaskFormErrors: action.data,\n            };\n        default:\n            return state;\n    }\n\n\n};\n\nexport default formErrorsReducer;\n","import {SET_TAKS_SEARCH_PARAMS, SET_TASKS_COUNT, SET_TASKS_LIST, UPDATE_TASKS} from '../action-types';\n\nconst initialState = {\n    updateTasks: false,\n    tasksSearchParams: {\n        page: 1,\n    },\n    tasksList: [],\n    totalTasks: 0,\n};\n\nconst tasksReducer = (state = initialState, action) =>\n{\n    switch (action.type)\n    {\n        case UPDATE_TASKS:\n            return {\n                ...state,\n                updateTasks: action.data,\n            };\n        case SET_TASKS_LIST:\n            return {\n                ...state,\n                tasksList: action.data,\n            };\n        case SET_TASKS_COUNT:\n            return {\n                ...state,\n                totalTasks: action.data,\n            };\n        case SET_TAKS_SEARCH_PARAMS:\n            return {\n                ...state,\n                tasksSearchParams: action.data,\n            };\n        default:\n            return state;\n    }\n\n\n};\n\nexport default tasksReducer;\n","import {combineReducers} from 'redux';\nimport commonReducer from \"./common-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport formErrorsReducer from \"./form-errors-reducer\";\nimport tasksReducer from \"./tasks-reducer\";\n\n\nexport default combineReducers({\n    common: commonReducer,\n    auth: authReducer,\n    formErrors: formErrorsReducer,\n    tasks: tasksReducer\n});\n","import {\n    HIDE_ERROR,\n    HIDE_FORM_LOADER,\n    HIDE_LOADER,\n    HIDE_SUCCESS,\n    REDIRECT,\n    SHOW_ERROR,\n    SHOW_FORM_LOADER,\n    SHOW_LOADER,\n    SHOW_SUCCESS\n} from '../action-types';\n\nexport const commonShowLoader = () => ({type: SHOW_LOADER});\nexport const commonHideLoader = () => ({type: HIDE_LOADER});\n\nexport const commonShowFormLoader = () => ({type: SHOW_FORM_LOADER});\nexport const commonHideFormLoader = () => ({type: HIDE_FORM_LOADER});\n\nexport const commonShowError = (data) => ({type: SHOW_ERROR, data});\nexport const commonHideError = () => ({type: HIDE_ERROR});\n\nexport const commonShowSuccess = (data) => ({type: SHOW_SUCCESS, data});\nexport const commonHideSuccess = () => ({type: HIDE_SUCCESS});\nexport const commonRedirect = (data) => ({type: REDIRECT, data});\n","import {put} from 'redux-saga/effects';\n\nimport {commonShowError, commonShowSuccess} from '../../actions/common-actions';\n\nclass HelperSaga {\n  constructor(service) {\n    this.service = service;\n  }\n\n  // region register - recover\n\n  *errorMessageSaga({text}) {\n    yield put(commonShowError(text));\n  }\n\n  *successMessageSaga({text}) {\n    yield put(commonShowSuccess(text));\n  }\n}\n\nexport default HelperSaga;\n","import {LOGIN, LOGOUT} from '../action-types';\n\nexport const authLogin = () => ({type: LOGIN});\nexport const authLogout = () => ({type: LOGOUT});\n","const formErrors = (errors, inputs) => {\n\n\n    const leftErrors = {...errors};\n\n    const formErrors = {};\n    for (let name of inputs)\n    {\n        if (errors[name])\n        {\n            formErrors[name] = errors[name];\n            delete leftErrors[name];\n        }\n    }\n\n\n    return {formErrors, leftErrors}\n}\n\n\n\nexport const loginFormErrors = (errors) => formErrors(errors,['username','password']);\nexport const addTasksFromErrors = (errors) => formErrors(errors,['username','password']);\nexport const editTasksFromErrors = (errors) => formErrors(errors,['status','text']);\n","import {SET_ADD_TASK_FORM_ERRORS, SET_EDIT_TASK_FORM_ERRORS, SET_LOGIN_FORM_ERRORS} from '../action-types';\n\nexport const setLoginFormErrors = (data) => ({type: SET_LOGIN_FORM_ERRORS, data});\nexport const setAddTaskFormErrors = (data) => ({type: SET_ADD_TASK_FORM_ERRORS, data});\nexport const setEditTaskFormErrors = (data) => ({type: SET_EDIT_TASK_FORM_ERRORS, data});\n","import {call, delay, put} from 'redux-saga/effects';\n\nimport {\n    commonHideFormLoader,\n    commonHideLoader,\n    commonShowError,\n    commonShowFormLoader,\n    commonShowLoader,\n    commonShowSuccess\n} from '../../actions/common-actions';\nimport {authLogin, authLogout} from '../../actions/auth-actions';\nimport {loginFormErrors} from \"../../../utlis/form-errors\";\nimport {setLoginFormErrors} from \"../../actions/form-errors-actions\";\n\nclass AuthSaga\n{\n    constructor(service)\n    {\n        this.service = service;\n    }\n\n    * loginSaga({params})\n    {\n        yield put(commonShowFormLoader());\n        const {status, message} = yield call(this.service.login, params);\n        yield put(setLoginFormErrors({}));\n        if (status === \"ok\")\n        {\n            yield put(commonShowSuccess(\"Вы вошли в систему\"));\n            yield call(this.service.setToken, message.token);\n            yield delay(1000)\n            yield put(authLogin());\n        } else\n        {\n            const {formErrors, leftErrors} = yield call(loginFormErrors, message);\n            yield put(setLoginFormErrors(formErrors));\n            yield put(commonShowError(leftErrors));\n        }\n\n        yield put(commonHideFormLoader());\n\n    }\n\n    * logoutSaga()\n    {\n        yield put(commonShowLoader());\n        yield put(commonShowSuccess(\"Вы вышли из системы\"));\n        yield call(this.service.clearToken);\n        yield delay(1000);\n        yield put(commonHideLoader());\n        yield put(authLogout());\n\n    }\n\n\n}\n\nexport default AuthSaga;\n","import {SET_TAKS_SEARCH_PARAMS, SET_TASKS_COUNT, SET_TASKS_LIST, UPDATE_TASKS} from '../action-types';\n\n\nexport const updateTasks = (data) => ({type: UPDATE_TASKS, data});\nexport const setTaksSearchParams = (data) => ({type: SET_TAKS_SEARCH_PARAMS, data});\nexport const setTasksList = (data) => ({type: SET_TASKS_LIST, data});\nexport const setTasksCount = (data) => ({type: SET_TASKS_COUNT, data});\n","import {call, delay, put} from 'redux-saga/effects';\n\nimport {\n    commonHideFormLoader,\n    commonHideLoader,\n    commonRedirect,\n    commonShowError,\n    commonShowFormLoader,\n    commonShowLoader,\n    commonShowSuccess\n} from '../../actions/common-actions';\nimport {addTasksFromErrors, editTasksFromErrors} from \"../../../utlis/form-errors\";\nimport {setAddTaskFormErrors, setEditTaskFormErrors} from \"../../actions/form-errors-actions\";\nimport {setTaksSearchParams, setTasksCount, setTasksList, updateTasks} from \"../../actions/tasks-actions\";\nimport {authLogout} from \"../../actions/auth-actions\";\n\nclass TasksSaga\n{\n    constructor(service)\n    {\n        this.service = service;\n    }\n\n    * addTaskSaga({params})\n    {\n\n        // show loader - clean previous errors\n        yield put(commonShowFormLoader());\n        yield put(setAddTaskFormErrors({}));\n\n        // make request\n        const {status, message} = yield call(this.service.addTask, params);\n\n        // show success alert - redirect to main page\n        if (status === \"ok\")\n        {\n            yield put(commonShowSuccess(\"Задача сохранена\"));\n            yield delay(1000)\n            yield put(commonRedirect(\"/\"))\n        }\n        // show errors\n        else\n        {\n            const {formErrors, leftErrors} = yield call(addTasksFromErrors, message);\n            yield put(setAddTaskFormErrors(formErrors));\n            yield put(commonShowError(leftErrors));\n        }\n\n        yield put(commonHideFormLoader());\n    }\n\n\n    * editTaskSaga({id, params})\n    {\n\n        // show loader - clean previous errors\n        yield put(commonShowFormLoader());\n        yield put(setEditTaskFormErrors({}));\n\n        // make request\n        const {status, message} = yield call(this.service.editTask, id, params);\n\n        if (status === \"ok\")\n        {\n            // show success alert\n            yield put(commonShowSuccess(\"Задача сохранена\"));\n            //small delay\n            yield delay(1000);\n            // update this page\n            yield put(updateTasks(true));\n\n        }\n        // user is not authorized - redirect to login page\n        else if (message.token && (message.token === \"Токен истёк\" || message.token === \"Невалидный токен\"))\n        {\n\n            yield put(authLogout());\n            yield call(this.service.clearToken);\n            yield put(commonShowError(\"Пройдите авторизацию\"));\n            yield put(commonRedirect(\"/login\"))\n        }\n        // other errors if exist\n        else\n        {\n            const {formErrors, leftErrors} = yield call(editTasksFromErrors, message);\n            yield put(setEditTaskFormErrors(formErrors));\n            yield put(commonShowError(leftErrors));\n        }\n        // hide form loader\n        yield put(commonHideFormLoader());\n    }\n\n\n    * tasksListSaga({params})\n    {\n\n        // show loader - clean previous errors\n        yield put(commonShowLoader());\n\n        // save search params\n        yield put(setTaksSearchParams(params));\n        // make request\n        const {status, message} = yield call(this.service.getTasksList, params);\n\n        // show success alert - redirect to main page\n        if (status === \"ok\")\n        {\n\n            const {tasks, total_task_count: total} = message;\n            // save data\n            yield put(setTasksList(tasks));\n            yield put(setTasksCount(parseInt(total)));\n        }\n        // show errors\n        else\n        {\n            yield put(commonShowError(message));\n        }\n\n        yield put(commonHideLoader());\n    }\n\n}\n\nexport default TasksSaga;\n","export const SAGA_SHOW_SUCCESS = 'SAGA_SHOW_SUCCESS';\nexport const SAGA_HIDE_SUCCESS = 'SAGA_HIDE_SUCCESS';\n\nexport const SAGA_SHOW_ERROR = 'SAGA_SHOW_ALERT';\nexport const SAGA_HIDE_ERROR = 'SAGA_HIDE_ALERT';\n\nexport const SAGA_LOGIN = 'SAGA_LOGIN';\nexport const SAGA_LOGOUT = 'SAGA_LOGOUT';\n\n\nexport const SAGA_ADD_TASK = 'SAGA_ADD_TASK';\nexport const SAGA_EDIT_TASK = 'SAGA_EDIT_TASK';\nexport const SAGA_GET_TASKS = 'SAGA_GET_TASKS';\n","import {takeEvery} from 'redux-saga/effects';\nimport {SAGA_SHOW_ERROR, SAGA_SHOW_SUCCESS} from '../../action-types-saga';\n\nconst thisSaga = (saga) => [\n    takeEvery(SAGA_SHOW_ERROR, [saga, saga.errorMessageSaga]),\n    takeEvery(SAGA_SHOW_SUCCESS, [saga, saga.successMessageSaga]),\n]\n\nexport default thisSaga;\n","import {takeEvery} from 'redux-saga/effects';\nimport {SAGA_LOGIN, SAGA_LOGOUT} from '../../action-types-saga';\n\n\nconst thisSaga = (saga) => [\n    takeEvery(SAGA_LOGIN, [saga, saga.loginSaga]),\n    takeEvery(SAGA_LOGOUT, [saga, saga.logoutSaga]),\n]\n\n\nexport default thisSaga;\n","import {takeEvery} from 'redux-saga/effects';\nimport {SAGA_ADD_TASK, SAGA_EDIT_TASK, SAGA_GET_TASKS} from '../../action-types-saga';\n\nconst thisSaga = (saga) => [\n    takeEvery(SAGA_ADD_TASK, [saga, saga.addTaskSaga]),\n    takeEvery(SAGA_EDIT_TASK, [saga, saga.editTaskSaga]),\n    takeEvery(SAGA_GET_TASKS, [saga, saga.tasksListSaga]),\n]\n\nexport default thisSaga;\n","import {all} from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\n\n\nimport BeejeeService from \"../services/beejee-service\";\n\nimport HelperSaga from './sagas/actors/helper-saga';\nimport AuthSaga from './sagas/actors/auth-saga';\nimport TasksSaga from './sagas/actors/tasks-saga';\n\nimport HelperListener from './sagas/listeners/saga-helper-listener';\nimport AuthListener from './sagas/listeners/saga-auth-listener';\nimport TasksListener from './sagas/listeners/saga-tasks-listener';\n\nes6promise.polyfill();\n\nconst service = new BeejeeService();\n\n\n\nconst helperSagas = HelperListener(new HelperSaga(service));\nconst authSagas = AuthListener(new AuthSaga(service));\nconst tasksSagas = TasksListener(new TasksSaga(service));\n//\n\n\nfunction* rootSaga() {\n    try {\n        yield all([...authSagas, ...helperSagas, ...tasksSagas]);\n    } catch (e) {\n        console.log(e);\n    }\n}\n\n\nexport default rootSaga;\n","import {applyMiddleware, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from \"./reducers\";\nimport rootSaga from './saga';\n\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [thunk, sagaMiddleware];\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\nstore.sagaTask = sagaMiddleware.run(rootSaga);\nexport default store;\n\n\n","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {commonHideError, commonHideSuccess} from \"../../../redux/actions/common-actions\";\n\nconst AlertsHandler = ({children, success, error, commonHideSuccess, commonHideError}) =>\n{\n\n    useEffect(() =>\n    {\n        if (error != null)\n        {\n            setTimeout(() =>\n            {\n                commonHideError();\n            }, 2000)\n        }\n    }, [error, commonHideError])\n\n\n    useEffect(() =>\n    {\n        if (success != null)\n        {\n            setTimeout(() =>\n            {\n                commonHideSuccess();\n            }, 2000)\n        }\n    }, [success, commonHideSuccess])\n\n\n    const showError = () =>\n    {\n        if (typeof error === 'string') return (\n            <div className=\"big-alert alert alert-danger\">\n                {error}\n            </div>\n        )\n        else if(Object.keys(error).length > 0)\n        {\n            return (\n                <div className=\"big-alert alert alert-danger\">\n                    <ul>\n                        {Object.keys(error).map(k =>\n                        {\n                            return (\n                                <li key={error[k]}>{error[k]}</li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            )\n        }\n    }\n\n    const showSuccess = () => (\n        <div className=\"big-alert alert alert-success\">\n            {success}\n        </div>\n    );\n\n    return (\n        <>\n            {error !== null && showError()}\n            {success !== null && showSuccess()}\n            {children}\n        </>\n    );\n};\n\nconst mapStateToProps = state =>\n{\n    return {success: state.common.globalSuccess, error: state.common.globalError};\n};\n\nexport default connect(mapStateToProps, {commonHideSuccess, commonHideError})(AlertsHandler);\n","import AuthHandler from \"./auth-handler\";\n\nexport default AuthHandler;\n","import {useState} from 'react';\nimport {authLogin, authLogout} from \"../../../redux/actions/auth-actions\";\nimport {connect} from \"react-redux\";\n\nconst AuthHandler = ({authLogin, authLogout, children}) =>\n{\n    useState(() =>\n    {\n        if (typeof localStorage.getItem('token') === 'string')\n        {\n            authLogin();\n        } else\n        {\n            authLogout();\n        }\n    }, [])\n\n    return children;\n};\n\nexport default connect(null, {authLogin, authLogout})(AuthHandler);\n","import {SAGA_ADD_TASK, SAGA_EDIT_TASK, SAGA_GET_TASKS, SAGA_LOGIN, SAGA_LOGOUT} from '../action-types-saga';\n\nexport const sagaAddTask = (params) => ({\n  type: SAGA_ADD_TASK,\n  params\n});\n\n\nexport const sagaEditTask = (id, params) => ({\n  type: SAGA_EDIT_TASK,\n  id,\n  params\n});\n\n\nexport const sagaGetTasksList = (params) => ({\n  type: SAGA_GET_TASKS,\n  params\n});\n\n\nexport const sagaLogin = (params) => ({\n  type: SAGA_LOGIN,\n  params\n});\n\n\n\n\nexport const sagaLogout = () => ({\n  type: SAGA_LOGOUT\n});\n\n//endregion\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {sagaLogout} from \"../../redux/actions/saga-actions\";\n\nconst Navigation = ({loggedIn, sagaLogout}) =>\n{\n    return (\n        <nav className=\"navbar navbar-expand-xl navbar-dark bg-dark\" aria-label=\"Sixth navbar example\">\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to=\"/\">BeeJees</Link>\n\n                <div className=\" navbar-collapse\" id=\"navbarsExample06\">\n                    <ul className=\"navbar-nav ml-auto mb-2 mb-xl-0\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Главная</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/add\">Добавить задачу</Link>\n                        </li>\n                        {!loggedIn &&\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/login\">Авторизация</Link></li>}\n                        {loggedIn && <li className=\"nav-item\"><button className=\"btn btn-link nav-link\" onClick={sagaLogout}>Выход</button></li>}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\nconst mapStateToProps = state =>\n{\n    return {loggedIn: state.auth.loggedIn};\n};\nexport default connect(mapStateToProps, {sagaLogout})(Navigation);\n","import RedirectHandler from \"./redirect-handler\";\n\nexport default RedirectHandler;\n","import React, {useEffect} from 'react';\nimport {connect} from \"react-redux\";\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {commonRedirect} from \"../../../redux/actions/common-actions\";\n\n\nconst RedirectHandler = ({children, redirect, commonRedirect}) =>\n{\n    const location = useLocation();\n    const history = useHistory();\n\n    useEffect(()=>{\n        if(redirect !== null){\n            if(location.pathname !== redirect){\n                history.push(redirect);\n            }\n            commonRedirect(null);\n        }\n\n    },[redirect])\n\n    return (\n        <>\n            {children}\n        </>\n    );\n};\n\nconst mapStateToProps = state => ({redirect: state.common.redirect})\nexport default connect(mapStateToProps, {commonRedirect})(RedirectHandler);\n","import React from 'react';\nimport AlertsHandler from \"../handlers/alerts-handler/alerts-handler\";\nimport AuthHandler from \"../handlers/auth-handler\";\nimport Navigation from \"../navigation/navigation\";\nimport RedirectHandler from \"../handlers/redirect-handler\";\nimport \"./layout.css\"\n\n\nconst Layout = ({children}) =>\n{\n    return (\n        <AlertsHandler>\n            <AuthHandler>\n                <RedirectHandler>\n                    <Navigation/>\n                    <div className=\"container\" id=\"container\">\n                        <div className=\"bg-light p-5 rounded\" id=\"main-content\">\n                            <div className=\"col-sm-12\">\n                                {children}\n                            </div>\n                        </div>\n                    </div>\n                </RedirectHandler>\n            </AuthHandler>\n        </AlertsHandler>\n    );\n};\n\n\n\nexport default Layout;\n","import RegularInput from \"./regular-input\";\n\nexport default RegularInput;\n","import React, {useEffect} from 'react';\nimport {inputValidators} from \"../../../../utlis\";\n\nconst RegularInput = ({name, label, placeholder, type = 'text', value, errorText, validator, changeInputValue, options = {}}) =>\n{\n\n\n    useEffect(() =>\n    {\n        changeInput(value);\n    }, [value]);\n\n    const changeInput = (val) =>\n    {\n        const validated = validate(val);\n        changeInputValue(val, validated);\n    };\n\n    const validate = (val) =>\n    {\n\n        switch (validator)\n        {\n            case 'email':\n                return inputValidators.validateEmail(val);\n            case 'required':\n                return inputValidators.validateRequiredField(val);\n            default:\n                return true;\n\n        }\n    };\n\n\n    const renderSelect = () =>\n    {\n        return (\n            <select className=\"form-control\" id={name} aria-describedby={`${name}help`} placeholder={placeholder}\n                    onChange={e => changeInput(e.target.value)} defaultValue={value}>\n                {\n                    Object.keys(options).map(k =>\n                    {\n                        return (\n                            <option value={k}>{options[k]}</option>\n                        )\n                    })\n                }\n            </select>\n        )\n    }\n\n\n    const renderInput = () => <input type={type} className=\"form-control\" id={name} aria-describedby={`${name}help`}\n                                     placeholder={placeholder} onChange={e => changeInput(e.target.value)}\n                                     value={value}/>\n\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            {type === 'select' ? renderSelect() : renderInput()}\n            <small id={`${name}help`} className=\"form-text text-danger\">{errorText}</small>\n        </div>\n    );\n};\n\nexport default RegularInput;\n","export default __webpack_public_path__ + \"static/media/spinner.5cec44dd.svg\";","import Spinner from \"./spinner\";\n\nexport default Spinner;\n","import React from 'react';\nimport './spinner.css';\n\nimport spinner from '../../assets/spinner.svg';\n\nconst Spinner = () =>\n{\n    return (\n        <div className=\"spinner\">\n            <img src={spinner} alt='Spinner'/>\n        </div>\n    );\n};\n\nexport default Spinner;\n","import Form from \"./form\";\n\nexport default Form;\n","import React, {useEffect, useState} from 'react';\nimport RegularInput from \"../inputs/regular-input\";\nimport Spinner from \"../../spinner\";\nimport {connect} from \"react-redux\";\n\n\nconst Form = ({\n                  inputs,\n                  action,\n                  initialState,\n                  header,\n                  buttonText,\n                  errors,\n                  loading\n              }) =>\n{\n\n    const [state, setState] = useState(initialState);\n\n\n    useEffect(() =>\n    {\n        const newState = {...state};\n        for (let k of Object.keys(newState.errorMessages))\n        {\n            if (errors[k])\n            {\n                newState.errorMessages[k] = errors[k];\n            }\n        }\n        setState(newState);\n    }, [errors])\n\n    const changeInputValue = (name, value, validated) =>\n    {\n        setState((state) =>\n        {\n            const validatedFields = {...state.validatedFields, [name]: validated};\n            const validatedCount = Object.keys(validatedFields).filter(\n                (i) => validatedFields[i],\n            ).length;\n\n            const newState = {\n                ...state,\n                [name]: value || '',\n                validatedFields: validatedFields,\n                validated: validatedCount === Object.keys(validatedFields).length,\n            };\n\n            newState.errorMessages[name] = '';\n            return newState;\n        });\n    };\n\n    const renderInputs = inputs.map((input) =>\n    {\n        const {name, type} = input;\n        return (\n            <RegularInput\n                key={`${name}-${type}`}\n                value={state[name]}\n                errorText={state.errorMessages[name]}\n                changeInputValue={(value, validated) =>\n                {\n                    changeInputValue(name, value, validated);\n                }}\n                {...input}\n            />\n        );\n    });\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        action(state)\n    }\n\n\n    return (\n        <div>\n            {header && <h3>{header}</h3>}\n            <form onSubmit={handleSubmit}>\n                {renderInputs}\n                {loading ? <Spinner/> : <input\n                    className=\"btn btn-primary float-right\"\n                    disabled={!state.validated}\n                    type=\"submit\"\n                    value={buttonText}\n                />}\n            </form>\n\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({loading: state.common.formLoading});\n\nexport default connect(mapStateToProps, null)(Form);\n","import React from 'react';\nimport {ServiceConsumer} from '../service-context';\n\nconst withService = () => (Wrapped) =>\n{\n    return (props) =>\n    {\n        return (\n            <ServiceConsumer>\n                {(service) =>\n                {\n                    return <Wrapped {...props} service={service}/>;\n                }}\n            </ServiceConsumer>\n        );\n    };\n};\n\nexport default withService;\n","import React from 'react';\nimport {connect} from \"react-redux\";\n\nimport Form from \"../../components/forms/form\";\nimport compose from \"../../utlis/compose\";\nimport {withService} from \"../../components/hoc-helpers\";\nimport {sagaAddTask} from \"../../redux/actions/saga-actions\";\n\nconst inputs = [\n    {\n        name: 'email',\n        validator: 'email',\n        label: 'Почта',\n        type: 'email'\n    },\n    {\n        name: 'username',\n        validator: 'required',\n        label: 'Пользователь',\n    }, {\n        name: 'text',\n        validator: 'required',\n        label: 'Текст задачи',\n    },\n\n];\n\nconst initialState = {\n    email: '',\n    username: '',\n    text: '',\n    validatedFields: {\n        email: false,\n        username: false,\n        text: false,\n    },\n    errorMessages: {\n        email: '',\n        username: '',\n        text: '',\n    },\n    validated: false,\n};\n\n\nconst AddTaskPage = ({errors, sagaAddTask}) =>\n{\n\n\n    const createTask = ({username, email, text}) =>\n    {\n        let form = new FormData();\n        form.append(\"username\", username);\n        form.append(\"email\", email);\n        form.append(\"text\", text);\n        sagaAddTask(form);\n\n        //TODO redirect on main page when task added\n    }\n\n    return (\n        <Form action={createTask} inputs={inputs} initialState={initialState} errors={errors} buttonText=\"Добавить\" header=\"Добавление задачи\"/>\n    );\n};\n\nconst mapStateToProps = state => ({errors: state.formErrors.addTaskFormErrors})\n\n\nexport default compose(\n    connect(mapStateToProps, {sagaAddTask}),\n    withService()\n)(AddTaskPage);\n\n\n\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\nimport Form from \"../../components/forms/form\";\nimport compose from \"../../utlis/compose\";\nimport {withService} from \"../../components/hoc-helpers\";\n\nimport {sagaLogin} from \"../../redux/actions/saga-actions\";\n\nconst inputs = [\n\n    {\n        name: 'username',\n        validator: 'required',\n        label: 'Имя пользователя',\n    }, {\n        name: 'password',\n        validator: 'required',\n        label: 'Пароль',\n        type: 'password'\n    },\n\n];\n\nconst initialState = {\n    username: '',\n    password: '',\n\n    validatedFields: {\n        username: false,\n        password: false,\n    },\n    errorMessages: {\n        username: '',\n        password: '',\n    },\n    validated: false,\n};\n\n\nconst LoginPage = ({loggedIn, sagaLogin, errors}) =>\n{\n    if (loggedIn) return <Redirect to=\"/\"/>\n\n    const loginAction = ({username, password}) =>\n    {\n        let form = new FormData();\n        form.append(\"username\", username);\n        form.append(\"password\", password);\n\n        sagaLogin(form);\n    }\n\n    return (\n        <Form action={loginAction} inputs={inputs} initialState={initialState} errors={errors} buttonText=\"Авторизация\" header=\"Вход в систему\"/>\n    );\n};\n\nconst mapStateToProps = state => ({loggedIn: state.auth.loggedIn, errors: state.formErrors.loginFormErrors})\n\nexport default compose(\n    connect(mapStateToProps, {sagaLogin}),\n    withService()\n)(LoginPage);\n\n\n\n","import React, {useState} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport compose from \"../../utlis/compose\";\nimport {withService} from \"../../components/hoc-helpers\";\nimport {connect} from \"react-redux\";\nimport {sagaLogout} from \"../../redux/actions/saga-actions\";\n\n\nconst LogoutPage = ({loggedIn, sagaLogout}) =>\n{\n\n\n    useState(() => sagaLogout(), []);\n\n    if(!loggedIn) return <Redirect to=\"/\"/>\n\n    return (\n        <div>\n            <h2>Вы успешно вышли из системы</h2>\n            <p>Вы будете перенаправлены на главную страницу</p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.auth.loggedIn\n    }\n}\nexport default compose(\n    withService(),\n    connect(mapStateToProps, {sagaLogout})\n)(LogoutPage);\n","import React from 'react';\nimport Spinner from \"../../spinner\";\nimport {connect} from \"react-redux\";\n\nconst LoadingHandler = ({children, loading}) =>\n{\n    return loading ? <Spinner/> : <>{children}</>;\n};\n\nconst mapStateToProps = state =>\n{\n    return {loading: state.common.loading};\n};\n\n\nexport default connect(mapStateToProps, null)(LoadingHandler);\n","import Pagination from \"./pagination\";\n\nexport default Pagination;\n","import React, {useEffect, useState} from 'react';\n\nimport './pagination.css';\n\nconst Pagination = ({total, perPage = 3, page = 1, changePage}) =>\n{\n\n    const [pages, setPages] = useState([]);\n\n    useEffect(() =>\n    {\n        let minPage = Math.max(page - 2, 1);\n        let maxPage = Math.min(page + 2, Math.ceil(total / perPage));\n        let pagesArray = [];\n        let cp = minPage;\n        while (cp <= maxPage)\n        {\n            pagesArray.push(cp++);\n        }\n        setPages(pagesArray)\n\n    }, [page, perPage, total])\n\n    if (total <= perPage) return null;\n\n    return (\n        <div className=\"float-right\">\n            <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination\">\n                    {\n                        pages.map(i =>\n                        {\n                            let className = `page-link ${i === page && 'active'}`\n                            return (\n                                <li key={`paginator-page-key-${i}`} className=\"page-item\">\n                                    <button className={className}\n                                            onClick={() => {if (i !== page) changePage(i)}}>{i}</button>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </nav>\n        </div>\n    );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport {dictionaries} from \"../../../utlis\";\n\nimport './tasks-sorter.css';\n\nconst sortTypes = dictionaries.sortTypes;\n\nconst TasksSorter = ({onChange, value = 0}) =>\n{\n    return (\n        <div className=\"col-md-6 col-sm-12 float-right sorter\">\n            <select className=\"form-control\" value={value} onChange={event => onChange(event.target.value)}>\n                {Object.keys(sortTypes).map(i =>\n                {\n                    const {name} = sortTypes[i];\n                    return (\n                        <option value={i} key={`task-sorter-${i}-${name}`}>{name}</option>\n                    )\n                })}\n            </select>\n\n        </div>\n    );\n};\n\nexport default TasksSorter;\n","import TasksSorter from './tasks-sorter';\n\nexport default TasksSorter;\n","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\n\n\nimport {dictionaries} from \"../../../utlis\";\nimport Form from \"../../forms/form\";\nimport LoadingHandler from \"../../handlers/loading-handler/loading-handler\";\nimport './task-row.css'\nimport compose from \"../../../utlis/compose\";\n\nimport {withService} from \"../../hoc-helpers\";\nimport {sagaEditTask} from \"../../../redux/actions/saga-actions\";\n\nconst statuses = dictionaries.statuses;\n\nconst inputs = [\n    {\n        name: 'status',\n        label: 'Статус',\n        type: 'select',\n        options: statuses\n    }, {\n        name: 'text',\n        validator: 'required',\n        label: 'Текст задачи',\n    },\n\n];\n\nconst initialState = {\n    status: '',\n    text: '',\n    validatedFields: {\n        status: true,\n        text: true,\n    },\n    errorMessages: {\n        status: '',\n        text: '',\n    },\n    validated: false,\n};\n\n\nconst TaskRow = ({id, username, email, text, status, number, loggedIn, service, errors, sagaEditTask}) =>\n{\n\n    const [loading, setLoading] = useState(false);\n    const [showEdit, setShowEdit] = useState(false);\n\n    const updateTask = ({text, status}) =>\n    {\n        setLoading(true)\n\n        let form = new FormData();\n        form.append(\"text\", text);\n        form.append(\"status\", status);\n        form.append(\"token\", service.getToken());\n        sagaEditTask(id, form)\n    }\n\n\n    const editRowRender = () =>\n    {\n        initialState.status = status;\n        initialState.text = text;\n        return (\n            <div className=\"task-edit-row\" key={`task-editor-${id}`}>\n                <LoadingHandler>\n                    <Form loading={loading} action={updateTask} inputs={inputs} initialState={initialState}\n                          errors={errors} buttonText=\"Сохранить\" header=\"Добавление задачи\" horizontal={true}/>\n                </LoadingHandler>\n            </div>\n        )\n    }\n\n    return (\n        <tr key={`task-${id}`}>\n            <td>{number}</td>\n            <td>{username}</td>\n            <td>{email}</td>\n            <td>{text}</td>\n            <td>{statuses[status]}</td>\n            {loggedIn && <td>\n                <button onClick={() => setShowEdit(!showEdit)} className=\"btn btn-info\">Редактировать</button>\n                {showEdit && editRowRender()}\n            </td>}\n        </tr>\n    );\n};\n\nconst mapStateToProps = state => ({errors: state.formErrors.editTaskFormErrors})\n\nexport default compose(\n    connect(mapStateToProps, {sagaEditTask}),\n    withService()\n)(TaskRow);\n","import TaskRow from \"./task-row\";\n\nexport default TaskRow;\n","import React from 'react';\nimport TaskRow from \"../task-row\";\nimport compose from \"../../../utlis/compose\";\nimport {connect} from \"react-redux\";\nimport {withService} from \"../../hoc-helpers\";\n\nconst TasksTable = ({loggedIn, tasks, searchParams: {page}}) =>\n{\n    return (\n        <table className=\"table\">\n            <thead>\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Пользователь</th>\n                <th scope=\"col\">Почта</th>\n                <th scope=\"col\">Текст</th>\n                <th scope=\"col\">Статус</th>\n                {loggedIn && <th scope=\"col\">Редактирование</th>}\n\n            </tr>\n            </thead>\n            <tbody>\n\n            {tasks.map((task, i) =>\n            {\n                const nm = (page - 1) * 3 + i + 1;\n                return (\n                    <TaskRow\n                        key={`task-${task.id}-${i}`}\n                        number={nm}\n                        loggedIn={loggedIn}\n                        {...task}\n                    />\n                )\n            })}\n            </tbody>\n        </table>\n    );\n};\n\n\nconst mapStateToProps = state => ({\n    loggedIn: state.auth.loggedIn,\n    tasks: state.tasks.tasksList,\n    searchParams: state.tasks.tasksSearchParams\n})\n\nexport default compose(\n    connect(mapStateToProps, null),\n    withService()\n)(TasksTable);\n","import React, {useEffect, useState} from 'react';\nimport {connect} from \"react-redux\";\n\nimport {withService} from \"../../components/hoc-helpers\";\nimport compose from \"../../utlis/compose\";\n\nimport LoadingHandler from \"../../components/handlers/loading-handler/loading-handler\";\nimport Pagination from \"../../components/tasks/pagination\";\nimport TasksSorter from \"../../components/tasks/tasks-sorter\";\nimport {dictionaries} from \"../../utlis\";\nimport {updateTasks} from \"../../redux/actions/tasks-actions\";\nimport {sagaGetTasksList} from \"../../redux/actions/saga-actions\";\nimport TasksTable from \"../../components/tasks/tasks-table/taks-table\";\n\nconst sortTypes = dictionaries.sortTypes;\n\nconst TasksListPage = ({update, updateTasks, total, sagaGetTasksList}) =>\n{\n\n\n    const [page, setPage] = useState(1);\n    const [sort, setSort] = useState(0);\n\n    const getData = (p = page, s = sort) =>\n    {\n\n        setPage(p);\n        setSort(s);\n        const {sort_field, sort_direction} = sortTypes[s];\n        const pararms = {page: p, sort_field, sort_direction};\n\n        sagaGetTasksList(pararms)\n\n    }\n\n    useEffect(getData, []);\n    useEffect(() =>\n    {\n        if (update !== false)\n        {\n            updateTasks(false);\n            getData();\n        }\n    }, [update]);\n\n    const renderNoTasks = () => (<h2>Пока нет ни одной задачи</h2>)\n\n    const renderData = () =>\n        (\n            <div className=\"table-responsive\">\n                <TasksSorter value={sort} onChange={(val) =>\n                {\n                    if (val !== sort)\n                    {\n                        getData(page, val)\n\n                    }\n                }}/>\n                <TasksTable/>\n                <Pagination page={page} perPage={3} total={total} changePage={(p) =>\n                {\n                    getData(p);\n                }}/>\n            </div>\n        )\n\n    return (\n        <LoadingHandler>\n            {total > 0 ? renderData() : renderNoTasks()}\n        </LoadingHandler>\n    );\n};\n\n\nconst mapStateToProps = state => ({\n    loggedIn: state.auth.loggedIn,\n    update: state.tasks.updateTasks,\n    total: state.tasks.totalTasks\n})\n\nexport default compose(\n    connect(mapStateToProps, {sagaGetTasksList, updateTasks}),\n    withService()\n)(TasksListPage);\n","import AppRouter from \"./app-router\";\n\nexport default AppRouter;\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport Layout from \"../layout/layout\";\n\n\nimport {AddTaskPage, LoginPage, LogoutPage, TasksListPage} from '../../pages'\n\n\nconst AppRouter = () =>\n{\n    return (\n        <Router>\n            <Layout>\n                <Switch>\n                    <Route path=\"/\"\n                           component={TasksListPage}\n                           exact/>\n                    <Route\n                        path=\"/login\"\n                        component={LoginPage}/>\n\n                    <Route\n                        path=\"/logout\"\n                        component={LogoutPage}/>\n\n                    <Route\n                        path=\"/add\"\n                        component={AddTaskPage}/>\n\n\n                    <Route render={() => <h2>Page not found</h2>}/>\n                </Switch>\n            </Layout>\n        </Router>\n\n    );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport {Provider} from \"react-redux\";\n\nimport BeejeeService from \"../../services/beejee-service\";\nimport ErrorBoundry from \"../error-boundry\";\nimport {ServiceProvider} from \"../service-context\"\n\n\nimport store from \"../../redux/store\";\n\n\nimport './app.css';\nimport AppRouter from \"../app-router\";\n\n\nconst service = new BeejeeService();\n\nconst App = () =>\n{\n\n\n    return (\n        <ErrorBoundry>\n            <Provider store={store}>\n                <ServiceProvider value={service}>\n                    <AppRouter/>\n                </ServiceProvider>\n            </Provider>\n        </ErrorBoundry>\n    );\n\n}\n\nexport default App;\n","import App from './app';\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}