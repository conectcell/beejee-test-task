{"version":3,"sources":["utlis/compose.js","utlis/input-validators.js","utlis/dictionaries.js","utlis/helpers.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/service-context/service-context.js","redux/action-types.js","redux/reducers/common-reducer.js","redux/reducers/auth-reducer.js","redux/reducers/index.js","redux/store.js","redux/actions/common-actions.js","components/alerts-handler/alerts-handler.js","redux/actions/auth-actions.js","components/auth-handler/index.js","components/auth-handler/auth-handler.js","components/navigation/navigation.js","components/layout/layout.js","components/forms/inputs/regular-input/index.js","components/forms/inputs/regular-input/regular-input.js","assets/spinner.svg","components/spinner/index.js","components/spinner/spinner.js","components/forms/form/index.js","components/forms/form/form.js","components/hoc-helpers/with-service.js","components/loading-handler/loading-handler.js","pages/add-task-page/add-task-page.js","pages/edit-task-page/edit-task-page.js","pages/edit-task-page/index.js","pages/login-page/login-page.js","pages/logout-page/logout-page.js","components/tasks/task-row/task-row.js","components/tasks/task-row/index.js","components/tasks/pagination/index.js","components/tasks/pagination/pagination.js","components/tasks/tasks-sorter/tasks-sorter.js","components/tasks/tasks-sorter/index.js","pages/tasks-list-page/tasks-list-page.js","components/app-router/index.js","components/app-router/app-router.js","components/app/app.js","services/beejee-service.js","components/app/index.js","reportWebVitals.js","index.js"],"names":["compose","funcs","comp","reduceRight","wrapped","f","text","length","email","toLowerCase","test","0","name","sort_field","sort_direction","1","3","4","5","6","7","8","obj","Object","keys","map","key","join","ErrorIndicator","className","ErrorBoundry","state","hasError","this","setState","props","children","Component","React","createContext","ServiceProvider","Provider","ServiceConsumer","Consumer","SHOW_SUCCESS","HIDE_SUCCESS","SHOW_ERROR","HIDE_ERROR","SHOW_LOADER","HIDE_LOADER","LOGIN","LOGOUT","initialState","globalError","globalSuccess","loading","commonReducer","action","type","data","loggedIn","authReducer","combineReducers","common","auth","createStore","rootReducer","commonShowLoader","commonHideLoader","commonShowError","commonShowSuccess","connect","success","error","commonHideSuccess","commonHideError","useEffect","setTimeout","k","authLogin","authLogout","AuthHandler","useState","localStorage","getItem","aria-label","to","id","aria-current","RegularInput","label","placeholder","value","errorText","validator","changeInputValue","options","changeInput","val","validated","validate","inputValidators","htmlFor","aria-describedby","onChange","e","target","defaultValue","Spinner","src","spinner","alt","Form","inputs","header","buttonText","errors","newState","errorMessages","renderInputs","input","validatedFields","validatedCount","filter","i","disabled","onClick","withService","Wrapped","service","username","history","useHistory","setErrors","form","FormData","append","addTask","then","status","message","push","formErrors","password","EditTaskPage","login","setToken","token","thisErrors","clearToken","statuses","dictionaries","TaskRow","number","updateFunction","setLoading","showEdit","setShowEdit","createTask","getToken","editTask","scope","horizontal","Pagination","total","perPage","page","changePage","pages","setPages","minPage","Math","max","maxPage","min","ceil","pagesArray","cp","sortTypes","TasksSorter","event","tasks","setTasks","setTotal","setPage","sort","setSort","getData","p","s","pararms","getTasksList","parseInt","total_task_count","task","AppRouter","path","component","TasksListPage","exact","LoginPage","LogoutPage","AddTaskPage","render","match","params","_apiBase","_token","removeItem","setItem","makeRequest","url","a","post","body","addDeveloper","toSend","method","fetch","res","ok","Error","json","developer","helpers","App","store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7308334b.chunk.js","sourcesContent":["const compose = (...funcs) => (comp) =>\n  funcs.reduceRight((wrapped, f) => f(wrapped), comp);\n\nexport default compose;\n","const validateEmail = (email) =>\n{\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n}\n\nexport default {\n    validateEmail(text)\n    {\n        return text.length === 0 ? false : validateEmail(text.toLowerCase());\n    },\n    validateRequiredField(text)\n    {\n        return text.length >= 3;\n    },\n};\n","export default {\n    statuses: {\n        '0': \"задача не выполнена\",\n        '1': \"задача не выполнена, отредактирована админом\",\n        '10': \"задача выполнена\",\n        '11': \"задача отредактирована админом и выполнена\"\n    },\n    sortTypes: {\n        0: {\n            name: \"Время добавления по возрастанию\",\n            sort_field: 'id',\n            sort_direction: 'asc'\n        },\n        1: {\n            name: \"Время добавления по убыванию\",\n            sort_field: 'id',\n            sort_direction: 'desc'\n        },\n        3: {\n            name: \"Имя пользователя по возрастанию\",\n            sort_field: 'username',\n            sort_direction: 'asc'\n        },\n        4: {\n            name: \"Имя пользователя по убыванию\",\n            sort_field: 'username',\n            sort_direction: 'desc'\n        },\n        5: {\n            name: \"Почта пользователя по возрастанию\",\n            sort_field: 'email',\n            sort_direction: 'asc'\n        },\n        6: {\n            name: \"Почта пользователя по убыванию\",\n            sort_field: 'email',\n            sort_direction: 'desc'\n        },\n        7: {\n            name: \"Статус по возрастанию\",\n            sort_field: 'status',\n            sort_direction: 'asc'\n        },\n        8: {\n            name: \"Статус по убыванию\",\n            sort_field: 'status',\n            sort_direction: 'desc'\n        }\n    }\n}\n","export default {\n    objectToUrl: (obj)=> {\n        return Object.keys(obj).map((key) => {\n            return key + '=' + obj[key];\n        }).join('&');\n    }\n}\n","import React from 'react';\n\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => {\n  return (\n    <div className=\"error-indicator\">\n      <h1>Houston, у нас проблемы</h1>\n    </div>\n  );\n};\n\nexport default ErrorIndicator;\n","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;\n","import React, {Component} from 'react';\n\nimport ErrorIndicator from '../error-indicator/error-indicator';\n\nexport default class ErrorBoundry extends Component\n{\n\n    state = {\n        hasError: false\n    };\n\n    componentDidCatch()\n    {\n        this.setState({\n            hasError: true\n        });\n    }\n\n    render()\n    {\n\n        if (this.state.hasError)\n        {\n            return <ErrorIndicator/>\n        }\n\n        return this.props.children;\n    }\n}\n","import React from 'react';\n\nconst {\n    Provider : ServiceProvider,\n    Consumer : ServiceConsumer\n} = React.createContext();\n\nexport {\n    ServiceProvider,\n    ServiceConsumer\n};\n","export const SHOW_SUCCESS = 'SHOW_SUCCESS';\nexport const HIDE_SUCCESS = 'HIDE_SUCCESS';\n\nexport const SHOW_ERROR = 'SHOW_ERROR';\nexport const HIDE_ERROR = 'HIDE_ERROR';\nexport const SHOW_LOADER = 'SHOW_LOADER';\nexport const HIDE_LOADER = 'HIDE_LOADER';\n\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n","import {\n    SHOW_ERROR,\n    SHOW_LOADER,\n    HIDE_LOADER,\n    HIDE_ERROR,\n    SHOW_SUCCESS,\n    HIDE_SUCCESS,\n} from '../action-types';\n\nconst initialState = {\n    globalError: null,\n    globalSuccess: null,\n    loading: false,\n};\n\nconst commonReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SHOW_ERROR:\n            return {\n                ...state,\n                globalError: action.data,\n            };\n        case HIDE_ERROR:\n            return {\n                ...state,\n                globalError: null,\n            };\n        case SHOW_SUCCESS:\n            return {\n                ...state,\n                globalSuccess: action.data,\n            };\n        case HIDE_SUCCESS:\n            return {\n                ...state,\n                globalSuccess: null,\n            };\n        case SHOW_LOADER:\n            return {\n                ...state,\n                loading: true,\n            };\n        case HIDE_LOADER:\n            return {\n                ...state,\n                loading: false,\n            };\n        default:\n            return state;\n    }\n\n\n};\n\nexport default commonReducer;\n","import {\n    LOGOUT,\n    LOGIN\n} from '../action-types';\n\nconst initialState = {\n    loggedIn: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOGIN:\n            return {\n                ...state,\n                loggedIn: true,\n            };\n        case LOGOUT:\n            return {\n                ...state,\n                loggedIn: false,\n            };\n        default:\n            return state;\n    }\n\n\n};\n\nexport default authReducer;\n","import {combineReducers} from 'redux';\nimport commonReducer from \"./common-reducer\";\nimport authReducer from \"./auth-reducer\";\n\n\nexport default combineReducers({\n    common: commonReducer,\n    auth: authReducer\n});\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import {\n  HIDE_LOADER,\n  HIDE_ERROR,\n  SHOW_ERROR,\n  SHOW_LOADER,\n  SHOW_SUCCESS,\n  HIDE_SUCCESS,\n} from '../action-types';\n\nexport const commonShowLoader = () => ({type: SHOW_LOADER});\nexport const commonHideLoader = () => ({type: HIDE_LOADER});\nexport const commonShowError = (data) => ({type: SHOW_ERROR, data});\nexport const commonHideError = () => ({type: HIDE_ERROR});\n\nexport const commonShowSuccess = (data) => ({type: SHOW_SUCCESS, data});\nexport const commonHideSuccess = () => ({type: HIDE_SUCCESS});\n","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {commonHideError, commonHideSuccess} from \"../../redux/actions/common-actions\";\nconst AlertsHandler = ({children, success, error, commonHideSuccess, commonHideError}) =>\n{\n\n    useEffect(() => {\n        if(error != null){\n            setTimeout(() => {\n                commonHideError();\n            }, 2000)\n        }\n    }, [error])\n\n\n    useEffect(() => {\n        if(success != null){\n            setTimeout(() => {\n                commonHideSuccess();\n            },2000)\n        }\n    }, [success])\n\n\n    const showError = () => {\n        if(typeof error == 'string') return (\n            <div className=\"big-alert alert alert-danger\">\n                {error}\n            </div>\n        )\n        else {\n            return (\n                <div className=\"big-alert alert alert-danger\">\n                    <ul>\n                        {Object.keys(error).map(k => {\n                            return (\n                                <li key={error[k]}>{error[k]}</li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            )\n        }\n    }\n\n    const showSuccess = () =>  (\n        <div className=\"big-alert alert alert-success\">\n            {success}\n        </div>\n    );\n\n    return (\n        <>\n            {error !== null && showError()}\n            {success !== null && showSuccess()}\n            {children}\n        </>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { success: state.common.globalSuccess, error: state.common.globalError };\n};\n\nexport default connect(mapStateToProps, {commonHideSuccess, commonHideError})(AlertsHandler);\n","import {\n  LOGIN,\n  LOGOUT\n} from '../action-types';\n\nexport const authLogin = () => ({type: LOGIN});\nexport const authLogout = () => ({type: LOGOUT});\n","import AuthHandler from \"./auth-handler\";\nexport default AuthHandler;\n","import React, {useState} from 'react';\nimport {authLogin, authLogout} from \"../../redux/actions/auth-actions\";\nimport {connect} from \"react-redux\";\n\nconst AuthHandler = ({authLogin, authLogout, children}) =>\n{\n    useState(()=>{\n       if(typeof localStorage.getItem('token') === 'string')\n       {\n           authLogin();\n       } else {\n           authLogout();\n       }\n    },[])\n\n    return children;\n};\n\nexport default connect(null, {authLogin, authLogout})(AuthHandler);\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\n\nconst Navigation = ({loggedIn}) =>\n{\n    return (\n        <nav className=\"navbar navbar-expand-xl navbar-dark bg-dark\" aria-label=\"Sixth navbar example\">\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to=\"/\">BeeJees</Link>\n\n                <div className=\" navbar-collapse\" id=\"navbarsExample06\">\n                    <ul className=\"navbar-nav ml-auto mb-2 mb-xl-0\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Главная</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/add\">Добавить задачу</Link>\n                        </li>\n                        {!loggedIn &&  <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/login\">Авторизация</Link></li>}\n                        {loggedIn &&  <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/logout\">Выход</Link></li>}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\nconst mapStateToProps = state => {\n    return { loggedIn: state.auth.loggedIn };\n};\nexport default connect(mapStateToProps, null)(Navigation);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport AlertsHandler from \"../alerts-handler/alerts-handler\";\nimport AuthHandler from \"../auth-handler\";\nimport Navigation from \"../navigation/navigation\";\n\nimport \"./layout.css\"\n\n\nconst Layout = ({children, loading}) =>\n{\n    return (\n        <AlertsHandler>\n            <AuthHandler>\n                <Navigation/>\n                <div className=\"container\" id=\"container\">\n                    <div className=\"bg-light p-5 rounded\">\n                        <div className=\"col-sm-12\">\n                            {children}\n                        </div>\n                    </div>\n                </div>\n            </AuthHandler>\n        </AlertsHandler>\n    );\n};\n\nconst mapStateToProps = state =>\n{\n    return {loading: state.common.loading};\n};\n\nexport default connect(mapStateToProps, null)(Layout);\n","import RegularInput from \"./regular-input\";\nexport default RegularInput;\n","import React, {useEffect} from 'react';\nimport {inputValidators} from \"../../../../utlis\";\n\nconst RegularInput = ({name, label, placeholder, type = 'text', value, errorText, validator, changeInputValue, options = {}}) =>\n{\n\n\n\n    useEffect(() => {\n        changeInput(value);\n    }, [value]);\n\n    const changeInput = (val) => {\n        const validated = validate(val);\n        changeInputValue(val, validated);\n    };\n\n    const validate = (val) => {\n\n        switch (validator) {\n            case 'email':\n                return inputValidators.validateEmail(val);\n            case 'required':\n                return inputValidators.validateRequiredField(val);\n            default:\n                return true;\n\n        }\n    };\n\n\n    const renderSelect = () => {\n        return (\n            <select className=\"form-control\" id={name} aria-describedby={`${name}help`} placeholder={placeholder} onChange={e => changeInput(e.target.value)} defaultValue={value}>\n                {\n                    Object.keys(options).map(k => {\n                        return (\n                            <option value={k} >{options[k]}</option>\n                        )\n                    })\n                }\n            </select>\n        )\n    }\n\n\n    const renderInput = () => <input type={type} className=\"form-control\" id={name} aria-describedby={`${name}help`} placeholder={placeholder} onChange={e => changeInput(e.target.value)} value={value}/>\n\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            {type == 'select' ? renderSelect() : renderInput()}\n            <small id={`${name}help`} className=\"form-text text-danger\">{errorText}</small>\n        </div>\n    );\n};\n\nexport default RegularInput;\n","export default __webpack_public_path__ + \"static/media/spinner.68f9f103.svg\";","import Spinner from \"./spinner\";\nexport default Spinner;\n","import React from 'react';\nimport './spinner.css';\n\nimport spinner from '../../assets/spinner.svg';\n\nconst Spinner = () =>\n{\n    return (\n        <div className=\"spinner\">\n            <img src={spinner} alt='Spinner'/>\n        </div>\n    );\n};\n\nexport default Spinner;\n","import Form from \"./form\";\nexport default Form;\n","import React, {useEffect, useState} from 'react';\nimport RegularInput from \"../inputs/regular-input\";\nimport Spinner from \"../../spinner\";\n\n\nconst Form = ({\n                  inputs,\n                  action,\n                  initialState,\n                  header,\n                  buttonText,\n                  errors,\n                  loading = false\n              }) =>\n{\n\n    const [state, setState] = useState(initialState);\n\n\n    useEffect(() =>\n    {\n        const newState = {...state};\n        for (let k of Object.keys(newState.errorMessages))\n        {\n            if (errors[k])\n            {\n                newState.errorMessages[k] = errors[k];\n            }\n        }\n        setState(newState);\n    }, [errors])\n\n    const changeInputValue = (name, value, validated) =>\n    {\n        setState((state) =>\n        {\n            const validatedFields = {...state.validatedFields, [name]: validated};\n            const validatedCount = Object.keys(validatedFields).filter(\n                (i) => validatedFields[i],\n            ).length;\n\n            const newState = {\n                ...state,\n                [name]: value || '',\n                validatedFields: validatedFields,\n                validated: validatedCount === Object.keys(validatedFields).length,\n            };\n\n            newState.errorMessages[name] = '';\n            return newState;\n        });\n    };\n\n    const renderInputs = inputs.map((input) =>\n    {\n        const {name, type} = input;\n        return (\n            <RegularInput\n                key={`${name}-${type}`}\n                value={state[name]}\n                errorText={state.errorMessages[name]}\n                changeInputValue={(value, validated) =>\n                {\n                    changeInputValue(name, value, validated);\n                }}\n                {...input}\n            />\n        );\n    });\n\n\n    return (\n        <div>\n            {header && <h3>{header}</h3>}\n            {renderInputs}\n            {loading ? <Spinner/> : <button\n                className=\"btn btn-primary float-right\"\n                disabled={!state.validated}\n                onClick={() => action(state)}\n            >{buttonText}</button>}\n        </div>\n    );\n};\n\nexport default Form;\n","import React from 'react';\nimport {ServiceConsumer} from '../service-context';\nconst withService = () => (Wrapped) => {\n    return (props) => {\n        return (\n            <ServiceConsumer>\n                {(service) => {\n                    return <Wrapped {...props} service={service} />;\n                }}\n            </ServiceConsumer>\n        );\n    };\n};\n\nexport default withService;\n","import React from 'react';\nimport Spinner from \"../spinner\";\nimport {connect} from \"react-redux\";\n\nconst LoadingHanler = ({children, loading}) =>\n{\n    return loading ? <Spinner/> : <>{children}</>;\n};\nconst mapStateToProps = state => {\n    return { loading: state.common.loading };\n};\n\n\nexport default connect(mapStateToProps, null)(LoadingHanler);\n","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n    commonHideLoader,\n    commonShowError,\n    commonShowLoader,\n    commonShowSuccess\n} from \"../../redux/actions/common-actions\";\n\nimport Form from \"../../components/forms/form\";\nimport compose from \"../../utlis/compose\";\nimport {withService} from \"../../components/hoc-helpers\";\nimport LoadingHanler from \"../../components/loading-handler/loading-handler\";\n\nconst inputs = [\n    {\n        name: 'email',\n        validator: 'email',\n        label: 'Почта',\n        type: 'email'\n    },\n    {\n        name: 'username',\n        validator: 'required',\n        label: 'Пользователь',\n    }, {\n        name: 'text',\n        validator: 'required',\n        label: 'Текст задачи',\n    },\n\n];\n\nconst initialState = {\n    email: '',\n    username: '',\n    text: '',\n    validatedFields: {\n        email: false,\n        username: false,\n        text: false,\n    },\n    errorMessages: {\n        email: '',\n        username: '',\n        text: '',\n    },\n    validated: false,\n};\n\n\nconst AddTaskPage = ({service, commonShowLoader, commonHideLoader, commonShowSuccess, commonShowError}) =>\n{\n    const history = useHistory();\n\n    const [errors, setErrors] = useState({});\n\n    const createTask = ({username, email, text}) =>\n    {\n        let form = new FormData();\n        form.append(\"username\", username);\n        form.append(\"email\", email);\n        form.append(\"text\", text);\n\n        commonShowLoader();\n        service.addTask(form).then(({status, message}) =>\n        {\n            if (status == \"ok\")\n            {\n                commonShowSuccess(\"Задача успешно добавлена\");\n                setTimeout(() => history.push(\"/\"), 2000);\n            } else\n            {\n                commonHideLoader();\n                const errors = {...message};\n\n                const formErrors = {};\n                for (let {name} of inputs)\n                {\n                    if (errors[name])\n                    {\n                        formErrors[name] = errors[name];\n                        delete errors[name];\n                    }\n                }\n\n                setErrors(formErrors);\n                if (Object.keys(errors).length > 0) commonShowError(errors);\n\n            }\n        });\n    }\n\n    return (\n        <LoadingHanler>\n            <Form action={createTask} inputs={inputs} initialState={initialState} errors={errors} buttonText=\"Добавить\"\n                  header=\"Добавление задачи\"/>\n        </LoadingHanler>\n    );\n};\n\n\n\nexport default compose(\n    connect(null, {commonShowLoader, commonHideLoader, commonShowSuccess, commonShowError}),\n    withService()\n)(AddTaskPage);\n\n\n\n","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {Redirect, useHistory} from \"react-router-dom\";\nimport {\n    commonHideLoader,\n    commonShowError,\n    commonShowLoader,\n    commonShowSuccess\n} from \"../../redux/actions/common-actions\";\n\nimport Form from \"../../components/forms/form\";\nimport compose from \"../../utlis/compose\";\nimport {withService} from \"../../components/hoc-helpers\";\nimport {authLogout} from \"../../redux/actions/auth-actions\";\nimport LoadingHanler from \"../../components/loading-handler/loading-handler\";\n\nconst inputs = [\n\n    {\n        name: 'text',\n        validator: 'required',\n        label: 'Текст задачи',\n    },\n    {\n        name: 'status',\n        validator: 'required',\n        label: 'Текст задачи',\n    },\n\n];\n\nconst initialState = {\n    username: '',\n    password: '',\n\n    validatedFields: {\n        username: false,\n        password: false,\n    },\n    errorMessages: {\n        username: '',\n        password: '',\n    },\n    validated: false,\n};\n\n\nconst EditTaskPage = ({id, service, loggedIn, commonShowLoader, commonHideLoader, commonShowSuccess, commonShowError, authLogout}) =>\n{\n\n    const [errors, setErrors] = useState({});\n\n    if (!loggedIn) return <Redirect to=\"/\"/>\n\n    const createTask = ({username, password}) =>\n    {\n        // let form = new FormData();\n        // form.append(\"username\", username);\n        // form.append(\"password\", password);\n        //\n        // commonShowLoader();\n        //\n        // service.login(form).then(({status, message}) =>\n        // {\n        //     if (status == \"ok\")\n        //     {\n        //         commonShowSuccess(\"Вы вошли в систему\");\n        //         service.setToken(message.token)\n        //         setTimeout(()=> authLogin(), 1000);\n        //     } else\n        //     {\n        //         commonHideLoader();\n        //         const thisErrors = {...message};\n        //\n        //         const formErrors = {};\n        //         for (let {name} of inputs)\n        //         {\n        //             if (thisErrors[name])\n        //             {\n        //                 formErrors[name] = thisErrors[name];\n        //                 delete thisErrors[name];\n        //             }\n        //         }\n        //\n        //         setErrors(formErrors);\n        //         if (Object.keys(thisErrors).length > 0) commonShowError(thisErrors);\n        //\n        //     }\n        // });\n    }\n\n    return (\n        <LoadingHanler>\n            <Form action={createTask} inputs={inputs} initialState={initialState} errors={errors} buttonText=\"Авторизация\" header=\"Вход в систему\"/>\n        </LoadingHanler>\n    );\n};\n\nconst mapStateToProps = state =>\n{\n    return {loggedIn: state.auth.loggedIn}\n}\n\nexport default compose(\n    connect(mapStateToProps, {commonShowLoader, commonHideLoader, commonShowSuccess, commonShowError, authLogout}),\n    withService()\n)(EditTaskPage);\n\n\n\n","import EditTaskPage from \"./edit-task-page\";\nexport default EditTaskPage;\n","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {Redirect, useHistory} from \"react-router-dom\";\nimport {\n    commonHideLoader,\n    commonShowError,\n    commonShowLoader,\n    commonShowSuccess\n} from \"../../redux/actions/common-actions\";\n\nimport Form from \"../../components/forms/form\";\nimport compose from \"../../utlis/compose\";\nimport {withService} from \"../../components/hoc-helpers\";\nimport {authLogin} from \"../../redux/actions/auth-actions\";\nimport LoadingHanler from \"../../components/loading-handler/loading-handler\";\n\nconst inputs = [\n\n    {\n        name: 'username',\n        validator: 'required',\n        label: 'Имя пользователя',\n    }, {\n        name: 'password',\n        validator: 'required',\n        label: 'Пароль',\n        type: 'password'\n    },\n\n];\n\nconst initialState = {\n    username: '',\n    password: '',\n\n    validatedFields: {\n        username: false,\n        password: false,\n    },\n    errorMessages: {\n        username: '',\n        password: '',\n    },\n    validated: false,\n};\n\n\nconst LoginPage = ({service, loggedIn, commonShowLoader, commonHideLoader, commonShowSuccess, commonShowError, authLogin}) =>\n{\n\n    const [errors, setErrors] = useState({});\n\n    if (loggedIn) return <Redirect to=\"/\"/>\n\n    const createTask = ({username, password}) =>\n    {\n        let form = new FormData();\n        form.append(\"username\", username);\n        form.append(\"password\", password);\n\n        commonShowLoader();\n\n        service.login(form).then(({status, message}) =>\n        {\n            if (status == \"ok\")\n            {\n                commonShowSuccess(\"Вы вошли в систему\");\n                service.setToken(message.token)\n                setTimeout(()=> authLogin(), 1000);\n            } else\n            {\n                commonHideLoader();\n                const thisErrors = {...message};\n\n                const formErrors = {};\n                for (let {name} of inputs)\n                {\n                    if (thisErrors[name])\n                    {\n                        formErrors[name] = thisErrors[name];\n                        delete thisErrors[name];\n                    }\n                }\n\n                setErrors(formErrors);\n                if (Object.keys(thisErrors).length > 0) commonShowError(thisErrors);\n\n            }\n        });\n    }\n\n    return (\n        <LoadingHanler>\n            <Form action={createTask} inputs={inputs} initialState={initialState} errors={errors} buttonText=\"Авторизация\" header=\"Вход в систему\"/>\n        </LoadingHanler>\n    );\n};\n\nconst mapStateToProps = state =>\n{\n    return {loggedIn: state.auth.loggedIn}\n}\n\nexport default compose(\n    connect(mapStateToProps, {commonShowLoader, commonHideLoader, commonShowSuccess, commonShowError, authLogin}),\n    withService()\n)(LoginPage);\n\n\n\n","import React, {useState} from 'react';\nimport {Redirect, useHistory} from \"react-router-dom\";\nimport compose from \"../../utlis/compose\";\nimport {withService} from \"../../components/hoc-helpers\";\nimport {connect} from \"react-redux\";\nimport {authLogout} from \"../../redux/actions/auth-actions\";\n\n\nconst LogoutPage = ({service, loggedIn, authLogout}) =>\n{\n\n\n    useState(() =>\n    {\n        service.clearToken();\n        setTimeout(()=> authLogout(), 1000);\n    }, []);\n\n    if(!loggedIn) return <Redirect to=\"/\"/>\n\n    return (\n        <div>\n            <h2>Вы успешно вышли из системы</h2>\n            <p>Вы будете перенаправлены на главную страницу</p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.auth.loggedIn\n    }\n}\nexport default compose(\n    withService(),\n    connect(mapStateToProps, {authLogout})\n)(LogoutPage);\n","import React, {useState} from 'react';\nimport {dictionaries} from \"../../../utlis\";\nimport Form from \"../../forms/form\";\nimport LoadingHanler from \"../../loading-handler/loading-handler\";\nimport './task-row.css'\nimport compose from \"../../../utlis/compose\";\nimport {connect} from \"react-redux\";\nimport {\n    commonShowError,\n    commonShowSuccess\n} from \"../../../redux/actions/common-actions\";\nimport {withService} from \"../../hoc-helpers\";\nimport {authLogout} from \"../../../redux/actions/auth-actions\";\n\nconst statuses = dictionaries.statuses;\n\nconst inputs = [\n    {\n        name: 'status',\n        label: 'Статус',\n        type: 'select',\n        options: statuses\n    }, {\n        name: 'text',\n        validator: 'required',\n        label: 'Текст задачи',\n    },\n\n];\n\nconst initialState = {\n    status: '',\n    text: '',\n    validatedFields: {\n        status: true,\n        text: true,\n    },\n    errorMessages: {\n        status: '',\n        text: '',\n    },\n    validated: false,\n};\n\n\nconst TaskRow = ({id, username, email, text, status, number, loggedIn, updateFunction, commonShowSuccess, commonShowError, service, authLogout}) =>\n{\n\n    const [loading, setLoading] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [showEdit, setShowEdit] = useState(false);\n\n    const createTask = ({text, status}) => {\n        setLoading(true)\n\n        let form = new FormData();\n        form.append(\"text\", text);\n        form.append(\"status\", status);\n        form.append(\"token\", service.getToken());\n\n        service.editTask(id, form).then(({status, message}) =>\n        {\n            if (status == \"ok\")\n            {\n                commonShowSuccess(\"Информация сохранена\");\n                commonShowSuccess(\"Информация сохранена\");\n                updateFunction();\n            } else\n            {\n                setLoading(false)\n                const errors = {...message};\n                const formErrors = {};\n                for (let {name} of inputs)\n                {\n                    if (errors[name])\n                    {\n                        formErrors[name] = errors[name];\n                        delete errors[name];\n                    }\n                }\n\n                if(message.token && message.token == \"Токен истёк\") {\n                    service.clearToken();\n                    authLogout();\n                }\n\n                setErrors(formErrors);\n                if (Object.keys(errors).length > 0) commonShowError(errors);\n\n            }\n        });\n    }\n\n\n\n    const editRow = () => {\n        initialState.status = status;\n        initialState.text = text;\n        return(\n            <div className=\"task-edit-row\">\n                <LoadingHanler>\n                    <Form loading={loading} action={createTask} inputs={inputs} initialState={initialState} errors={errors} buttonText=\"Сохранить\" header=\"Добавление задачи\" horizontal={true}/>\n                </LoadingHanler>\n            </div>\n        )\n    }\n\n    return (\n        <>\n            <tr key={`task-${id}`}>\n                <td scope=\"col\">{number}</td>\n                <td scope=\"col\">{username}</td>\n                <td scope=\"col\">{email}</td>\n                <td scope=\"col\">{text}</td>\n                <td scope=\"col\">{statuses[status]}</td>\n                {loggedIn && <td scope=\"col\">\n                    <button onClick={() => setShowEdit(!showEdit)} className=\"btn btn-info\">Редактировать</button>\n                    {showEdit && editRow()}\n                </td>}\n            </tr>\n\n        </>\n    );\n};\n\nexport default compose(\n    connect(null, {commonShowSuccess,  commonShowError, authLogout}),\n    withService()\n)(TaskRow);\n","import TaskRow from \"./task-row\";\nexport default TaskRow;\n","import Pagination from \"./pagination\";\nexport default Pagination;\n","import React, {useEffect, useState} from 'react';\n\nimport './pagination.css';\n\nconst Pagination = ({total, perPage = 3, page = 1, changePage}) =>\n{\n\n    const [pages, setPages] = useState([]);\n\n    useEffect(() =>\n    {\n        let minPage = Math.max(page - 2, 1);\n        let maxPage = Math.min(page + 2, Math.ceil(total / perPage));\n        let pagesArray = [];\n        let cp = minPage;\n        while (cp <= maxPage)\n        {\n            pagesArray.push(cp++);\n        }\n        setPages(pagesArray)\n\n    }, [])\n\n    if (total <= perPage) return null;\n\n\n    return (\n        <div className=\"float-right\">\n            <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination\">\n                    {\n                        pages.map(i =>\n                        {\n                            let className = `page-link ${i === page && 'active'}`\n                            return (\n                                <li key={`paginator-page-key-${i}`} className=\"page-item\">\n                                    <a className={className} onClick={() => {if (i != page) changePage(i);}}>{i}</a>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </nav>\n        </div>\n    );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport {dictionaries} from \"../../../utlis\";\n\nimport './tasks-sorter.css';\n\nconst sortTypes = dictionaries.sortTypes;\n\nconst TasksSorter = ({onChange, value = 0}) =>\n{\n    return (\n        <div className=\"col-md-6 col-sm-12 float-right sorter\">\n            <select className=\"form-control\" value={value} onChange={event => onChange(event.target.value)}>\n                {Object.keys(sortTypes).map(i => {\n                    const {name} = sortTypes[i];\n                    return(\n                        <option value={i}>{name}</option>\n                    )\n                })}\n            </select>\n\n        </div>\n    );\n};\n\nexport default TasksSorter;\n","import TasksSorter from './tasks-sorter';\nexport default TasksSorter;\n","import React, {useEffect, useState} from 'react';\nimport {connect} from \"react-redux\";\n\nimport {withService} from \"../../components/hoc-helpers\";\nimport compose from \"../../utlis/compose\";\n\n\nimport {commonHideLoader, commonShowError, commonShowLoader} from \"../../redux/actions/common-actions\";\nimport LoadingHanler from \"../../components/loading-handler/loading-handler\";\nimport TaskRow from \"../../components/tasks/task-row\";\nimport Pagination from \"../../components/tasks/pagination\";\nimport TasksSorter from \"../../components/tasks/tasks-sorter\";\nimport {dictionaries} from \"../../utlis\";\n\nconst sortTypes = dictionaries.sortTypes;\n\nconst TasksListPage = ({service, loggedIn, commonHideLoader, commonShowLoader, commonShowError}) =>\n{\n\n    const [tasks, setTasks] = useState([]);\n    const [total, setTotal] = useState(0);\n\n    const [page, setPage] = useState(1);\n    const [sort, setSort] = useState(0);\n\n\n    useEffect(() =>\n    {\n        getData();\n    }, [])\n\n    const getData = (p = page, s = sort) =>\n    {\n\n        setPage(p);\n        setSort(s);\n        const {sort_field, sort_direction} = sortTypes[s];\n        const pararms = {page: p, sort_field, sort_direction};\n\n\n\n        commonShowLoader();\n        service.getTasksList(pararms).then(({status, message}) =>\n        {\n            commonHideLoader();\n            if (status === \"ok\")\n            {\n                setTasks(message.tasks)\n                setTotal(parseInt(message.total_task_count))\n            } else\n            {\n                setTasks([]);\n                setTotal(0);\n                commonShowError(message);\n            }\n        });\n    }\n\n    const renderNoTasks = () =>\n    {\n        return (\n            <h2>Пока нет ни одной задачи</h2>\n        )\n    }\n\n    const renderTasksTable = () =>\n    {\n        return (\n            <div className=\"table-responsive\">\n                <TasksSorter value={sort} onChange={(val) => {\n                    if(val != sort){\n                        getData(page, val)\n\n                    }\n\n                }}/>\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Пользователь</th>\n                        <th scope=\"col\">Почта</th>\n                        <th scope=\"col\">Текст</th>\n                        <th scope=\"col\">Статус</th>\n                        {loggedIn && <th scope=\"col\">Редактирование</th>}\n\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {tasks.map((task, i) =>\n                    {\n                        return (\n                            <TaskRow\n                                updateFunction={()=> getData()}\n                                key={`task-${task.id}-${i}`}\n                                number={(page - 1) + 1 + i}\n                                loggedIn={loggedIn}\n                                {...task}\n                            />\n                        )\n                    })}\n\n                    </tbody>\n                </table>\n                <Pagination page={page} perPage={3} total={total} changePage={(p)=> {\n                    getData(p);\n                }}/>\n            </div>\n        )\n    }\n\n    return (\n        <LoadingHanler>\n            {total > 0 ? renderTasksTable() : renderNoTasks()}\n        </LoadingHanler>\n    );\n};\n\n\nconst mapStateToProps = state => ({loggedIn: state.auth.loggedIn})\n\nexport default compose(\n    connect(mapStateToProps, {commonHideLoader, commonShowLoader, commonShowError}),\n    withService()\n)(TasksListPage);\n","import AppRouter from \"./app-router\";\nexport default AppRouter;\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport Layout from \"../layout/layout\";\n\n\nimport {TasksListPage, LoginPage, LogoutPage, AddTaskPage, EditTaskPage} from '../../pages'\n\n\nconst AppRouter = () =>\n{\n    return (\n        <Router>\n            <Layout>\n                <Switch>\n                    <Route path=\"/\"\n                           component={TasksListPage}\n                           exact />\n                    <Route\n                        path=\"/login\"\n                        component={LoginPage}/>\n\n                    <Route\n                        path=\"/logout\"\n                        component={LogoutPage}/>\n\n                    <Route\n                        path=\"/add\"\n                        component={AddTaskPage}/>\n\n\n                    <Route path=\"/edit/:id\"\n                           render={({ match }) => {\n                               const { id } = match.params;\n                               return <EditTaskPage id={id} />\n                           }}/>\n\n\n                    <Route render={() => <h2>Page not found</h2>} />\n                </Switch>\n            </Layout>\n        </Router>\n\n    );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport {Provider} from \"react-redux\";\n\nimport BeejeeService from \"../../services/beejee-service\";\nimport ErrorBoundry from \"../error-boundry\";\nimport {ServiceProvider} from \"../service-context\"\n\n\nimport store from \"../../redux/store\";\n\n\nimport './app.css';\nimport AppRouter from \"../app-router\";\n\n\n\nconst service = new BeejeeService();\n\nconst App = () =>\n{\n\n\n    return (\n        <ErrorBoundry>\n            <Provider store={store}>\n                <ServiceProvider value={service}>\n                    <AppRouter/>\n                </ServiceProvider>\n            </Provider>\n        </ErrorBoundry>\n    );\n\n}\n\nexport default App;\n","import {helpers} from '../utlis'\nexport default class BeejeeService\n{\n    _apiBase = 'https://uxcandy.com/~shapoval/test-task-backend/v2/';\n    _token = null;\n\n\n\n    constructor() {\n        this._token = localStorage.getItem('token');\n    }\n\n    clearToken = () => {\n        this._token = null;\n        localStorage.removeItem('token')\n    }\n\n    setToken = (token) => {\n        this._token = token;\n        localStorage.setItem('token', token);\n    }\n\n    getToken = () => {\n        return this._token;\n    };\n\n\n    makeRequest = async (url, post = false, body = null, addDeveloper = true) => {\n        const toSend = {};\n\n        if(post)\n        {\n            toSend.method = 'POST';\n            toSend.body = body;\n        }\n\n\n        const res = await fetch(`${this._apiBase}${url}${addDeveloper ? '?developer=ykemer' : ''}`, toSend);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` + `, received ${res.status}`)\n        }\n        return await res.json();\n    };\n\n\n\n    getTasksList = async (params = {}) => {\n        params.developer = 'ykemer';\n        return await this.makeRequest(`?${helpers.objectToUrl(params)}`, false, null, false);\n    }\n\n    editTask = async (id, params) => {\n        return await this.makeRequest(`edit/${id}`, true, params);\n    }\n\n\n    addTask = async (params) => {\n        return await this.makeRequest('create', true, params);\n    }\n\n    login = async (params) => {\n        return await this.makeRequest('login', true, params);\n    }\n\n\n\n}\n","import App from './app';\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}